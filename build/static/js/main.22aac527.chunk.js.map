{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["BASE_URL","a","axios","get","data","newPerson","post","person","put","id","delete","personService","getAll","addNew","update","deletePerson","FilterBox","filterString","handler","value","onChange","NewPerson","submitHandler","name","nameHandler","number","numberHandler","onSubmit","type","disabled","Persons","persons","handleDelete","filteredPersons","filter","toLowerCase","includes","sort","b","map","PhonebookItem","DeleteButton","onClick","Notification","text","color","style","fontSize","backgroundColor","border","borderStyle","borderRadius","padding","marginBottom","textAlign","App","useState","setPersons","setName","setNumber","setFilter","notification","setNotification","showNotification","setTimeout","useEffect","then","addNewPerson","e","preventDefault","concat","personToBeDeleted","window","confirm","console","log","createHandler","setter","target","formProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22aac527.chunk.js","sourcesContent":["// Tässä kansiossa on pelkkä muokattu frontend puhelinluetteloon. Backend on repossa https://github.com/mUusitalo/osa3-full-stack-open-palautukset\r\nimport axios from 'axios'\r\n\r\nconst BASE_URL = '/api/persons'\r\n\r\nasync function getAll() {\r\n    return (await axios.get(BASE_URL)).data\r\n}\r\n\r\nasync function addNew(newPerson) {\r\n    return (await axios.post(BASE_URL, newPerson)).data\r\n}\r\n\r\nasync function update(person) {\r\n    return (await axios.put(`${BASE_URL}/${person.id}`, person)).data\r\n}\r\n\r\nasync function deletePerson(person) {\r\n    return (await axios.delete(`${BASE_URL}/${person.id}`)).data\r\n}\r\n\r\nconst personService = {getAll, addNew, update, deletePerson}\r\nexport default personService","// Tässä kansiossa on pelkkä muokattu frontend puhelinluetteloon. Backend on repossa https://github.com/mUusitalo/osa3-full-stack-open-palautukset\nimport React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons.js'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ name, setName ] = useState('')\n  const [ number, setNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({text: null, color: 'snow'})\n\n  useEffect(() =>\n    personService.getAll().then(setPersons)\n  , [])\n\n  function showNotification(text, color) {\n    setNotification({text, color})\n    setTimeout(() => setNotification({...notification, text: null}), 3000)\n  }\n\n  async function updatePerson(existingPerson) {\n    if (existingPerson.number) {\n      console.log(\"Person already exists in array, prompting update\", existingPerson)\n      if (!window.confirm(`Update ${name}'s number from ${existingPerson.number} to ${number || \"blank\"}?`)) return\n    }\n    try {\n      const updatedPerson = await personService.update({...existingPerson, number})\n      setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person))\n      showNotification(`Updated ${updatedPerson.name}'s number to ${number}`, 'green')  \n    } catch (e) {\n      console.log(e)\n      showNotification(`Oops, ${existingPerson.name} doesn't exist in the database. Refetching data.`, 'red')\n      personService.getAll().then(setPersons)\n    }\n  }\n\n  const addNewPerson = async (e) => {\n    e.preventDefault()\n    \n    const person = {name, number}\n\n    //const existingPerson = persons.find((person) => person.name === name)\n    const existingPerson = false;\n    if (existingPerson) {\n\n      updatePerson(existingPerson)\n\n    } else {\n\n      const newPerson = await personService.addNew(person)\n      showNotification(`Added ${newPerson.name}`, 'green')\n      setPersons(persons.concat(newPerson)) \n\n    }\n  }\n\n  const handleDelete = async (personToBeDeleted) => {\n    const isConfirmed = window.confirm(`Confirm deletion of ${personToBeDeleted.name}?`)\n    if (!isConfirmed) return\n    try {\n      await personService.deletePerson(personToBeDeleted)\n      showNotification(`Deleted ${personToBeDeleted.name}`, 'green')\n      setPersons(persons.filter(person => person.id !== personToBeDeleted.id))  \n    } catch (e) {\n      console.log(\"Tried to delete following person, but they didn't exist in the database\", personToBeDeleted)\n      personService.getAll().then(setPersons)\n      showNotification(`Oops, ${personToBeDeleted.name} doesn't exist in the database. Refetching data.`, 'red')\n    }\n  }\n\n  const createHandler = (setter) => (\n    (e) => setter(e.target.value)\n  )\n  \n  const formProps = {\n    submitHandler: addNewPerson,\n    name: name,\n    nameHandler: createHandler(setName),\n    number: number,\n    numberHandler: createHandler(setNumber)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification {...notification}/>\n      <NewPerson {...formProps}/>\n      <h2>Numbers</h2>\n      <FilterBox filterString={filter} handler={createHandler(setFilter)}/>\n      <Persons persons={persons} filterString={filter} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nconst FilterBox = ({filterString, handler}) => (\n  <>\n    Filter names: <input value={filterString} onChange={handler}/>\n  </>\n)\n\nconst NewPerson = ({submitHandler, name, nameHandler, number, numberHandler}) => (\n  <>\n    Add new person:\n    <form onSubmit={submitHandler}>\n      <div>name: <input value={name} onChange={nameHandler}/></div>\n      <div>Phone number: <input value={number} onChange={numberHandler}/></div>\n      <div><button type=\"submit\" disabled={!(name && number)}>add</button></div>\n    </form>\n  </>\n)\n\nconst Persons = ({persons, filterString, handleDelete}) => {\n\n  const filterFunction = person => (\n    person\n      .name\n    .toLowerCase()\n    .includes(filterString.toLowerCase())\n  )\n\n  const sortFunction = (a, b) => (\n    a.name.toLowerCase() > b.name.toLowerCase() ?\n    1 :\n    -1\n  )\n  \n  const filteredPersons = persons\n                          .filter(filterFunction)\n                          .sort(sortFunction)\n\n  return(\n    <ul>\n      {filteredPersons.map(person => <PhonebookItem key={person.id} person={person} handleDelete={handleDelete}/>)}\n    </ul>\n  )\n}\n\nconst PhonebookItem = ({person, handleDelete}) => {\n  return (\n    <li>{person.name} {person.number} <DeleteButton person={person} handleDelete={() => handleDelete(person)}/></li>\n  )\n}\n\nconst DeleteButton = ({handleDelete}) => {\n  return <button onClick={handleDelete}>Delete</button>\n}\n\nconst Notification = ({text, color}) => {\n  if (!text) return null\n\n  const style = {\n    fontSize: 30,\n    color: color,\n    backgroundColor: 'snow',\n    border: 5,\n    borderStyle: 'solid',\n    borderRadius: 10,\n    padding: 14,\n    marginBottom: 16,\n    textAlign: 'center'\n  }\n\n  return <div style={style}>{text}</div>\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}